// a list of theses caracters: MgkpcFms12e?wTUtufBCx
worldLine12 = " ";
worldLine11 = " ";
worldLine10 = " ";
worldLine9 = " ";
worldLine8 = " ";
worldLine7 = " ";
worldLine6 = " ";
worldLine5 = "cFm C";
worldLine4 = "eee";
worldLine3 = " ";
worldLine2 = "MgkpB fT t";
worldLine1 = "12e?wx0U u";

background=false;
backgroundThickness=1; // [1:32]
backgroundHeight=12; // [1:12]

$vpt=[80,0,10];
$vpr=[70,0,320];
$vpd=400;

world = [
    worldLine12,
    worldLine11,
    worldLine10,
    worldLine9,
    worldLine8,
    worldLine7,
    worldLine6,
    worldLine5,
    worldLine4,
    worldLine3,
    worldLine2,
    worldLine1
];

MarioWorld(world, background, backgroundThickness, backgroundHeight);

module MarioWorld(world, background, backgroundThickness, backgroundHeight) {
    if (background) {
        difference() {
            MarioLevel(world);
            cube([len(worldLine1)*16, 17, 12*16]);
        }
        translate([0,-1,0])
            color("SkyBlue")
                cube([len(worldLine1)*16, backgroundThickness, backgroundHeight*16]);
    } else {
        MarioLevel(world);
    }
}

module MarioLevel(world) {
    for (j = [0:len(world) - 1]) {
        translate([0, 0, 16 * (len(world) -1 - j)])
            worldLine(world[j]);
    }
}

module worldLine(line) {
  for (i = [0:len(line) - 1]) {
    translate([16 * i, 0, 0])
        tile(line[i]);
  }
}

module tile(tileType) {
  // Characters
  if (tileType == "M") { mario(); }
  // Enemies
  else if (tileType == "g") { gumba(); }
  else if (tileType == "k") { koopa(); }
  else if (tileType == "p") { piranha_plant(); }
  // items
  else if (tileType == "c") { coin(); }
  else if (tileType == "F") { flower(); }
  else if (tileType == "m") { mushroom(); }
  else if (tileType == "s") { star(); }
  // blocks
  else if (tileType == "1") { floor1(); }
  else if (tileType == "2") { floor2(); }
  else if (tileType == "e") { empty(); }
  else if (tileType == "?") { question(); }
  else if (tileType == "w") { wall(); }
  // tubes
  else if (tileType == "T") { big_tube_top(); }
  else if (tileType == "U") { big_tube_bottom(); }
  else if (tileType == "t") { tube_top(); }
  else if (tileType == "u") { tube_bottom(); }
  // decor
  else if (tileType == "f") { fence(); }
  else if (tileType == "B") { bush(); }
  else if (tileType == "C") { cloud(); }
  // debug
  else if (tileType == "x") { tileFull(); }
  else if (tileType == "0") { tileHollow(); }
}

module big_tube_top() {
    translate([0,16,0]) scale([2,2,1]) tube_top();
}

module big_tube_bottom() {
    translate([0,16,0]) scale([2,2,1]) tube_bottom();
}


module tileFull() {
    color("white")
        translate([0,-16,0])
            cube(16);
}

module tileHollow() {
  color("black")
  translate([0,-16,0]) {
      translate([ 0, 0, 0]) cube([16,1,1]);
      translate([ 0, 0,15]) cube([16,1,1]);
      translate([ 0,15, 0]) cube([16,1,1]);
      translate([ 0,15,15]) cube([16,1,1]);
      
      translate([ 0, 0, 0]) cube([1,16,1]);
      translate([ 0, 0,15]) cube([1,16,1]);
      translate([15, 0, 0]) cube([1,16,1]);
      translate([15, 0,15]) cube([1,16,1]);
      
      translate([ 0, 0, 0]) cube([1,1,16]);
      translate([ 0,15 ,0]) cube([1,1,16]);
      translate([15, 0, 0]) cube([1,1,16]);
      translate([15,15, 0]) cube([1,1,16]);
  }
}

module coin() {
    color("yellow")
        translate([8,-4,8]) {
            cube([8, 6, 8], center = true);
            cube([6, 6, 12], center = true);
            cube([4, 6, 14], center = true);
            cube([4, 8, 8], center = true);
            cube([2, 8, 10], center = true);
        }
}

module flower() {
    translate([8,-4,12]) {
        color("white") {
            cube([8, 6, 8], center = true);
            cube([12, 6, 6], center = true);
            cube([14, 6, 4], center = true);
            cube([16, 6, 2], center = true);
        }
        color("yellow") {
            cube([8, 8, 4], center = true);
            cube([12, 8, 2], center = true);
        }
        color("red") {
            cube([6, 10, 2], center = true);
        }
    }
    translate([8,-8,0]) {
        color("lightgreen") {
            translate([0, 0, 4]) cube([2, 4, 8], center = true);
            translate([0, 0, 1]) cube([4, 4, 2], center = true);

            translate([3.5, 0, 2.5]) cube([3, 4, 3], center = true);
            translate([4.5, 0, 3.5]) cube([3, 4, 3], center = true);
            translate([6, 0, 5]) cube([3, 4, 2], center = true);
            translate([7, 0, 6.5]) cube([3, 4, 1], center = true);

            translate([-3.5, 0, 2.5]) cube([3, 4, 3], center = true);
            translate([-4.5, 0, 3.5]) cube([3, 4, 3], center = true);
            translate([-6, 0, 5]) cube([3, 4, 2], center = true);
            translate([-7, 0, 6.5]) cube([3, 4, 1], center = true);
        }
    }
}

module star() {
    map=[
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0],
            [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0],
            [0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0],
            [0,1,1,1,1,1,2,1,1,2,1,1,1,1,1,0],
            [0,0,1,1,1,1,2,1,1,2,1,1,1,1,0,0],
            [0,0,0,1,1,1,2,1,1,2,1,1,1,0,0,0],
            [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0],
            [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0],
            [0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0],
            [0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0],
            [0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0],
            [0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0],
            [0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-7,len(map) - 1 - y]) color("yellow") cube([1,6,1]);
            } else if (map[y][x] == 2) {
                translate([x,-8,len(map) - 1 - y]) color("lightgreen") cube([1,8,1]);
            }
        }
    }
}

module mushroom() {
    map=[
            [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,],
            [0,0,0,0,0,1,1,1,1,2,2,0,0,0,0,],
            [0,0,0,0,1,1,1,1,2,2,2,2,0,0,0,],
            [0,0,0,1,1,1,1,1,2,2,2,2,2,0,0,],
            [0,0,1,1,1,1,1,1,1,2,2,2,1,1,0,],
            [0,1,1,2,2,2,1,1,1,1,1,1,1,1,1,],
            [0,1,2,2,2,2,2,1,1,1,1,1,1,1,1,],
            [1,1,2,2,2,2,2,1,1,1,1,1,2,2,1,],
            [1,1,2,2,2,2,2,1,1,1,1,1,2,2,2,],
            [1,1,1,2,2,2,1,1,1,1,1,1,1,2,2,],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
            [0,1,2,2,2,3,3,3,3,3,3,2,2,2,1,],
            [0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,],
            [0,0,0,0,3,3,3,3,3,3,1,3,0,0,0,],
            [0,0,0,0,3,3,3,3,3,3,1,3,0,0,0,],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-7,len(map) - 1 - y]) color("orange") cube([1,6,1]);
            } else if (map[y][x] == 2) {
                translate([x,-8,len(map) - 1 - y]) color("red") cube([1,8,1]);
            } else if (map[y][x] == 3) {
                translate([x,-6,len(map) - 1 - y]) color("white") cube([1,4,1]);
            }
        }
    }
}


module cloud() {
    map=[
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,],
            [0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,],
            [0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,1,0,1,0,0,0,0,0,0,0,0,0,],
            [0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,1,2,1,0,0,0,0,0,0,0,0,],
            [0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,3,2,2,2,2,2,1,0,0,0,0,0,0,0,],
            [0,0,0,0,0,0,0,0,0,1,2,2,2,3,3,2,2,2,3,2,2,2,2,1,0,0,0,0,0,0,0,],
            [0,0,0,0,0,0,0,0,1,2,2,2,3,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,0,0,0,],
            [0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,1,0,0,0,],
            [0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,2,1,0,0,],
            [0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,0,0,],
            [0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,],
            [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,],
            [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,],
            [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,],
            [0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,],
            [0,0,1,2,2,3,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,1,0,],
            [0,0,0,1,2,2,3,2,2,3,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,],
            [0,0,0,0,1,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,3,2,2,2,2,2,2,2,2,],
            [0,0,0,0,1,2,2,2,2,2,3,3,3,3,3,3,2,3,3,3,3,3,2,2,2,2,2,2,2,2,2,],
            [0,0,0,0,0,1,1,1,2,2,2,2,3,3,2,2,2,2,3,3,3,2,2,2,2,2,2,2,2,1,1,],
            [0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,1,2,2,1,1,0,0,],
            [0,0,0,0,0,0,0,0,0,1,1,2,2,2,1,0,1,1,2,2,2,2,1,1,0,1,1,0,0,0,0,],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-8,len(map) - 1 - y]) color("white") cube([1,6,1]);
            } else if (map[y][x] == 2) {
                translate([x,-9,len(map) - 1 - y]) color("white") cube([1,8,1]);
            } else if (map[y][x] == 3) {
                translate([x,-10,len(map) - 1 - y]) color("lightblue") cube([1,10,1]);
            }
        }
    }
}


module mario() {
    map=[
            [0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,],
            [0,0,0,0,2,2,2,2,2,2,2,2,2,0,0,],
            [0,0,0,0,1,1,1,3,3,1,3,1,1,0,0,],
            [0,0,0,1,3,1,3,3,3,1,3,3,3,1,0,],
            [0,0,0,1,3,1,1,3,3,3,1,3,3,3,0,],
            [0,0,0,1,1,3,3,3,3,1,1,1,1,0,0,],
            [0,0,0,0,1,3,3,3,3,3,3,3,0,0,0,],
            [0,0,0,0,1,1,2,1,1,1,1,0,0,0,0,],
            [0,0,0,1,1,1,2,1,1,2,1,1,1,0,0,],
            [0,0,1,1,1,1,2,2,2,2,1,1,1,1,0,],
            [0,0,3,3,1,2,3,2,2,3,2,1,3,3,0,],
            [0,0,3,3,3,2,2,2,2,2,2,3,3,3,0,],
            [0,0,3,3,2,2,2,2,2,2,2,2,3,3,0,],
            [0,0,0,1,2,2,2,0,0,2,2,2,1,0,0,],
            [0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-7,len(map) - 1 - y]) color("darkgray") cube([1,6,1]);
            } else if (map[y][x] == 2) {
                translate([x,-8,len(map) - 1 - y]) color("red") cube([1,8,1]);
            } else if (map[y][x] == 3) {
                translate([x,-6,len(map) - 1 - y]) color("orange") cube([1,4,1]);
            }
        }
    }
}

module gumba() {
    map=[
            [0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,],
            [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,],
            [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,],
            [0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,],
            [0,0,1,2,2,1,1,1,1,1,1,2,2,1,0,],
            [0,1,1,1,3,2,1,1,1,1,2,3,1,1,1,],
            [0,1,1,1,3,2,2,2,2,2,2,3,1,1,1,],
            [1,1,1,1,3,2,3,1,1,3,2,3,1,1,1,],
            [1,1,1,1,3,3,3,1,1,3,3,3,1,1,1,],
            [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
            [0,1,1,1,1,3,3,3,3,3,3,1,1,1,1,],
            [0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,],
            [0,0,0,0,3,3,3,3,3,3,3,3,4,4,0,],
            [0,0,0,5,5,3,3,3,3,3,4,4,4,4,4,],
            [0,0,0,5,5,5,3,3,3,4,4,4,4,4,4,],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-7,len(map) - 1 - y]) color("SaddleBrown") cube([1,6,1]);
            } else if (map[y][x] == 2) {
                translate([x,-8,len(map) - 1 - y]) color("black") cube([1,8,1]);
            } else if (map[y][x] == 3) {
                translate([x,-6,len(map) - 1 - y]) color("PeachPuff") cube([1,4,1]);
            } else if (map[y][x] == 4) {
                translate([x,-7,len(map) - 1 - y]) color("black") cube([1,4,1]);
            } else if (map[y][x] == 5) {
                translate([x,-5,len(map) - 1 - y]) color("black") cube([1,4,1]);
            }
        }
    }
}

module koopa() {
    map=[
        [0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,],
        [0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,],
        [0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,],
        [0,2,3,1,1,2,2,0,0,0,0,0,0,0,0,],
        [0,2,3,1,1,2,2,0,0,0,0,0,0,0,0,],
        [0,2,3,1,1,2,2,0,0,0,0,0,0,0,0,],
        [0,2,1,1,1,2,2,0,0,0,0,0,0,0,0,],
        [2,2,2,1,2,2,2,0,0,0,0,0,0,0,0,],
        [2,3,2,2,2,2,2,0,0,0,0,0,0,0,0,],
        [2,2,2,2,2,2,0,0,3,3,3,3,3,0,0,],
        [2,2,2,0,2,2,0,3,2,3,3,3,2,3,0,],
        [2,2,0,0,2,2,0,3,3,2,3,2,3,3,3,],
        [2,2,0,2,2,1,3,3,3,3,2,3,1,1,3,],
        [0,2,0,2,2,1,3,3,3,2,3,2,3,1,3,],
        [0,0,0,2,2,1,2,3,2,3,3,3,2,3,2,],
        [0,0,2,2,1,1,3,2,3,3,3,3,3,2,3,],
        [0,0,0,2,1,3,2,3,2,3,3,3,2,3,2,],
        [0,0,0,2,1,2,3,3,3,2,3,2,3,3,3,],
        [0,0,0,0,1,3,3,3,3,3,2,3,3,3,3,],
        [0,0,0,0,1,1,3,3,3,2,3,2,3,1,1,],
        [0,0,0,2,2,1,1,1,2,3,3,1,1,1,3,],
        [0,0,2,2,2,2,2,1,1,1,1,1,2,2,2,],
    ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-7,len(map) - 1 - y]) color("white") cube([1,7,1]);
            } else if (map[y][x] == 2) {
                translate([x,-6,len(map) - 1 - y]) color("orange") cube([1,4,1]);
            } else if (map[y][x] == 3) {
                translate([x,-8,len(map) - 1 - y]) color("green") cube([1,8,1]);
            }
        }
    }
    
}

module piranha_plant() {
    map=[
        [0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,],
        [0,1,2,3,3,0,0,0,0,0,0,3,3,2,1,0,],
        [0,1,1,3,0,0,0,0,0,0,0,0,3,1,1,0,],
        [0,2,1,2,3,3,0,0,0,0,3,3,2,1,2,0,],
        [1,1,1,2,3,0,0,0,0,0,0,3,2,1,1,1,],
        [2,1,1,1,2,3,3,0,0,3,3,2,1,1,1,2,],
        [1,1,2,1,1,3,0,0,0,0,3,1,1,2,1,1,],
        [1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,],
        [1,2,1,1,1,1,3,0,0,3,1,1,1,1,2,1,],
        [1,1,1,1,2,1,3,0,0,3,1,2,1,1,1,1,],
        [0,2,1,1,1,1,1,0,0,1,1,1,1,1,2,0,],
        [0,1,1,2,1,1,1,0,0,1,1,1,2,1,1,0,],
        [0,0,1,1,1,1,2,0,0,2,1,1,1,1,0,0,],
        [0,0,0,1,2,1,1,1,1,1,1,2,1,0,0,0,],
        [0,0,0,0,0,1,2,1,1,2,1,0,0,0,0,0,],
        [4,4,0,0,0,0,0,4,4,0,0,0,0,0,4,4,],
        [4,5,4,4,0,0,0,4,4,0,0,0,4,4,5,4,],
        [0,4,5,4,4,0,0,4,4,0,0,4,4,5,4,0,],
        [0,4,4,5,4,4,0,4,4,0,4,4,5,4,4,0,],
        [0,0,4,4,5,4,5,4,4,5,4,5,4,4,0,0,],
        [0,0,4,4,4,5,4,4,4,4,5,4,4,4,0,0,],
    ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-9,len(map) - 1 - y]) color("red") cube([1,8,1]);
            } else if (map[y][x] == 2) {
                translate([x,-10,len(map) - 1 - y]) color("orange") cube([1,10,1]);
            } else if (map[y][x] == 3) {
                translate([x,-8,len(map) - 1 - y]) color("white") cube([1,6,1]);
            } else if (map[y][x] == 4) {
                translate([x,-8,len(map) - 1 - y]) color("green") cube([1,6,1]);
            } else if (map[y][x] == 5) {
                translate([x,-9,len(map) - 1 - y]) color("lightgreen") cube([1,8,1]);
            }
        }
    }
}

module bush() {
    map=[
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,],
        [0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,],
        [0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,1,0,1,0,0,0,0,0,0,0,0,0,],
        [0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,1,2,1,0,0,0,0,0,0,0,0,],
        [0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,3,2,2,2,2,2,1,0,0,0,0,0,0,0,],
        [0,0,0,0,0,0,0,0,0,1,2,2,2,3,3,2,2,2,3,2,2,2,2,1,0,0,0,0,0,0,0,],
        [0,0,0,0,0,0,0,0,1,2,2,2,3,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0,0,0,0,],
        [0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,1,0,0,0,],
        [0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,2,1,0,0,],
        [0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,0,0,],
        [0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,],
        [0,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,],
        [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,],
        [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,],
    ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-8,len(map) - 1 - y]) color("Chartreuse") cube([1,6,1]);
            } else if (map[y][x] == 2) {
                translate([x,-9,len(map) - 1 - y]) color("LimeGreen") cube([1,8,1]);
            } else if (map[y][x] == 3) {
                translate([x,-10,len(map) - 1 - y]) color("green") cube([1,10,1]);
            }
        }
    }
}

module fence() {
    color("SaddleBrown")
        translate([8, - 4, 8]) {
            cube([4, 8, 16], center = true);
            cube([6, 6, 16], center = true);
            cube([8, 4, 16], center = true);

            translate([0, 0, 4.5]) {
                cube([16, 4, 1], center = true);
                cube([16, 2, 3], center = true);
            }
            translate([0, 0, - 4.5]) {
                cube([16, 4, 1], center = true);
                cube([16, 2, 3], center = true);
            }
        }
}

module floor1() {
    map=[
            [1,1,2,2,2,1,3,2,2,2,2,2,2,2,1,1,],
            [2,1,1,1,1,2,3,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,2,3,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,2,3,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,3,2,3,1,1,1,1,1,1,1,1,2,],
            [1,2,3,3,3,1,3,1,1,1,1,1,1,1,1,2,],
            [2,2,2,2,2,2,3,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,2,3,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,2,3,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,2,3,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,2,3,1,1,1,1,1,1,3,3,],
            [2,1,1,1,1,1,2,3,1,1,1,1,3,3,2,2,],
            [2,1,1,1,1,1,1,2,3,3,3,3,2,2,1,2,],
            [2,1,1,1,1,1,1,2,3,2,2,2,1,1,1,2,],
            [2,2,1,1,1,1,1,2,3,1,1,1,1,1,1,2,],
            [1,1,2,2,2,2,2,2,1,2,2,2,2,2,1,1,],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-16,len(map) - 1 - y]) color("SaddleBrown") cube([1,16,1]);
            } else if (map[y][x] == 2) {
                translate([x,-15,len(map) - 1 - y]) color("Chocolate") cube([1,14,1]);
            } else if (map[y][x] == 3) {
                translate([x,-16,len(map) - 1 - y]) color("SandyBrown") cube([1,12,1]);
            }
        }
    }
}

module floor2() {
    color("SaddleBrown")
    translate([8,-8,8]) {
        cube([16, 6, 16], center = true);
        cube([14, 8, 14], center = true);
        cube([12, 10, 12], center = true);
        cube([10, 12, 10], center = true);
        cube([8, 14, 8], center = true);
        cube([6, 16, 6], center = true);
    }
}

module empty() {
    map=[
            [0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,2,1,1,1,1,1,1,1,1,1,1,2,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,2,1,1,1,1,1,1,1,1,1,1,2,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-16,len(map) - 1 - y]) color("SandyBrown") cube([1,16,1]);
            } else if (map[y][x] == 2) {
                translate([x,-15,len(map) - 1 - y]) color("SaddleBrown") cube([1,14,1]);
            }
        }
    }
}

module question() {
    map=[
            [0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,2,1,1,1,1,1,1,1,1,1,1,2,1,2,],
            [2,1,1,1,1,2,2,2,2,2,1,1,1,1,1,2,],
            [2,1,1,1,2,2,1,1,1,2,2,1,1,1,1,2,],
            [2,1,1,1,2,2,1,1,1,2,2,1,1,1,1,2,],
            [2,1,1,1,2,2,1,1,1,2,2,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,2,2,2,1,1,1,1,2,],
            [2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,],
            [2,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,],
            [2,1,2,1,1,1,1,1,1,1,1,1,1,2,1,2,],
            [2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,],
            [0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-16,len(map) - 1 - y]) color("SandyBrown") cube([1,16,1]);
            } else if (map[y][x] == 2) {
                translate([x,-15,len(map) - 1 - y]) color("SaddleBrown") cube([1,14,1]);
            }
        }
    }
}

module wall() {
    map=[
            [1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,],
            [1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,],
            [1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,],
            [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,],
            [1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,],
            [1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,],
            [1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,],
            [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,],
            [1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,],
            [1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,],
            [1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,],
            [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,],
            [1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,],
            [1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,],
            [1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,],
        ];
    for (y = [0:len(map) - 1]) {
        for (x = [0:len(map[y]) - 1]) {
            if (map[y][x] == 1) {
                translate([x,-16,len(map) - 1 - y]) color("FireBrick") cube([1,16,1]);
            } else if (map[y][x] == 2) {
                translate([x,-15,len(map) - 1 - y]) color("black") cube([1,14,1]);
            }
        }
    }
}

module tube_top() {
    map = [
            [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,],
            [0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,],
            [0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,],
            [0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,],
            [0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,],
            [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,],
            [1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,],
            [1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,],
            [1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,],
            [1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,],
            [1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,],
            [0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,],
            [0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,],
            [0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,],
            [0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,],
            [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,],
        ];
    rotate([90,0,0])
        for (y = [0:len(map) - 1]) {
            for (x = [0:len(map[y]) - 1]) {
                if (map[y][x] == 1) {
                    translate([x, 8, len(map) - 1 - y]) color("green") cube([1, 8, 1]);
                }
            }
        }
    tube_bottom();
}

module tube_bottom() {
    map = [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],
            [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,],
            [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,],
            [0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,],
            [0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,],
            [0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,],
            [0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,],
            [0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,],
            [0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,],
            [0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,],
            [0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,],
            [0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,],
            [0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,],
            [0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,],
            [0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,],
        ];
    rotate([90,0,0])
        for (y = [0:len(map) - 1]) {
            for (x = [0:len(map[y]) - 1]) {
                if (map[y][x] == 1) {
                    translate([x, 0, len(map) - 1 - y]) color("green") cube([1, 16, 1]);
                }
            }
        }
}
